{"version":3,"sources":["../src/index.js"],"names":["filterClone","obj","include","exclude","res","getType","i","len","length","push","j","indexOf","test","value","str","Object","prototype","toString","call","slice","toLowerCase"],"mappings":";;;;;;;;;;AAAO,SAASA,WAAT,CAAqBC,GAArB,EAA0BC,OAA1B,EAAmCC,OAAnC,EAA4C;AACjD,MAAIC,GAAJ;;AACA,MAAI,QAAOH,GAAP,KAAc,QAAlB,EAA4B;AAC1B,QAAII,OAAO,CAACJ,GAAD,CAAP,KAAiB,OAArB,EAA8B;AAC5BG,MAAAA,GAAG,GAAG,EAAN;;AACA,WAAK,IAAIE,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGN,GAAG,CAACO,MAA1B,EAAkCF,CAAC,GAAGC,GAAtC,EAA2CD,CAAC,EAA5C,EAAgD;AAC9CF,QAAAA,GAAG,CAACK,IAAJ,CAAST,WAAW,CAACC,GAAG,CAACK,CAAD,CAAJ,EAASJ,OAAT,EAAkBC,OAAlB,CAApB;AACD;AACF,KALD,MAKO;AACLC,MAAAA,GAAG,GAAG,EAAN;;AACA,WAAK,IAAIM,CAAT,IAAcT,GAAd,EAAmB;AACjB,YAAIC,OAAO,IAAIG,OAAO,CAACH,OAAD,CAAP,KAAqB,OAAhC,IAA2CA,OAAO,CAACM,MAAvD,EAA+D;AAC7D,cAAIN,OAAO,CAACS,OAAR,CAAgBD,CAAhB,KAAsB,CAAC,CAA3B,EAA8B;AAC5BN,YAAAA,GAAG,CAACM,CAAD,CAAH,GAASV,WAAW,CAACC,GAAG,CAACS,CAAD,CAAJ,EAASR,OAAT,EAAkBC,OAAlB,CAApB;AACD;AACF,SAJD,MAIO,IAAID,OAAO,IAAIG,OAAO,CAACH,OAAD,CAAP,KAAqB,QAApC,EAA8C;AACnD,cAAIA,OAAO,CAACU,IAAR,CAAaF,CAAb,CAAJ,EAAqB;AACnBN,YAAAA,GAAG,CAACM,CAAD,CAAH,GAASV,WAAW,CAACC,GAAG,CAACS,CAAD,CAAJ,EAASR,OAAT,EAAkBC,OAAlB,CAApB;AACD;AACF,SAJM,MAIA,IAAIA,OAAO,IAAIE,OAAO,CAACF,OAAD,CAAP,KAAqB,OAAhC,IAA2CA,OAAO,CAACK,MAAvD,EAA+D;AACpE,cAAIL,OAAO,CAACQ,OAAR,CAAgBD,CAAhB,MAAuB,CAAC,CAA5B,EAA+B;AAC7BN,YAAAA,GAAG,CAACM,CAAD,CAAH,GAASV,WAAW,CAACC,GAAG,CAACS,CAAD,CAAJ,EAASR,OAAT,EAAkBC,OAAlB,CAApB;AACD;AACF,SAJM,MAIA,IAAIA,OAAO,IAAIE,OAAO,CAACF,OAAD,CAAP,KAAqB,QAApC,EAA8C;AACnD,cAAI,CAACA,OAAO,CAACS,IAAR,CAAaF,CAAb,CAAL,EAAsB;AACpBN,YAAAA,GAAG,CAACM,CAAD,CAAH,GAASV,WAAW,CAACC,GAAG,CAACS,CAAD,CAAJ,EAASR,OAAT,EAAkBC,OAAlB,CAApB;AACD;AACF,SAJM,MAIA;AACLC,UAAAA,GAAG,CAACM,CAAD,CAAH,GAASV,WAAW,CAACC,GAAG,CAACS,CAAD,CAAJ,EAASR,OAAT,EAAkBC,OAAlB,CAApB;AACD;AACF;AACF;AACF,GA9BD,MA8BO;AACLC,IAAAA,GAAG,GAAGH,GAAN;AACD;;AACD,SAAOG,GAAP;AACD;;AACM,SAASC,OAAT,CAAiBQ,KAAjB,EAAwB;AAC7B,MAAMC,GAAG,WAAUD,KAAV,CAAT;;AACA,MAAIC,GAAG,KAAK,QAAZ,EAAsB;AACpB,WAAOD,KAAK,KAAK,IAAV,GACH,IADG,GAEHE,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CACGC,IADH,CACQL,KADR,EAEGM,KAFH,CAES,CAFT,EAEY,CAAC,CAFb,EAGGC,WAHH,EAFJ;AAMD;;AACD,SAAON,GAAP;AACD","sourcesContent":["export function filterClone(obj, include, exclude) {\n  let res;\n  if (typeof obj == \"object\") {\n    if (getType(obj) === \"array\") {\n      res = [];\n      for (let i = 0, len = obj.length; i < len; i++) {\n        res.push(filterClone(obj[i], include, exclude));\n      }\n    } else {\n      res = {};\n      for (let j in obj) {\n        if (include && getType(include) === \"array\" && include.length) {\n          if (include.indexOf(j) != -1) {\n            res[j] = filterClone(obj[j], include, exclude);\n          }\n        } else if (include && getType(include) === \"regexp\") {\n          if (include.test(j)) {\n            res[j] = filterClone(obj[j], include, exclude);\n          }\n        } else if (exclude && getType(exclude) === \"array\" && exclude.length) {\n          if (exclude.indexOf(j) === -1) {\n            res[j] = filterClone(obj[j], include, exclude);\n          }\n        } else if (exclude && getType(exclude) === \"regexp\") {\n          if (!exclude.test(j)) {\n            res[j] = filterClone(obj[j], include, exclude);\n          }\n        } else {\n          res[j] = filterClone(obj[j], include, exclude);\n        }\n      }\n    }\n  } else {\n    res = obj;\n  }\n  return res;\n}\nexport function getType(value) {\n  const str = typeof value;\n  if (str === \"object\") {\n    return value === null\n      ? null\n      : Object.prototype.toString\n          .call(value)\n          .slice(8, -1)\n          .toLowerCase();\n  }\n  return str;\n}\n"],"file":"index.js"}