{"version":3,"sources":["../src/index.js"],"names":["filterClone","obj","include","exclude","res","getType","i","len","length","push","Object","create","j","indexOf","test","value","str","prototype","toString","call","slice","toLowerCase"],"mappings":"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","sourcesContent":["function filterClone(obj, include, exclude) {\n  let res\n  if (typeof obj == 'object') {\n    if (getType(obj) === 'array') {\n      res = []\n      for (let i = 0, len = obj.length; i < len; i++) {\n        res.push(filterClone(obj[i], include, exclude))\n      }\n    } else if (obj !== null) {\n      res = Object.create(null)\n      for (let j in obj) {\n        if (include && getType(include) === 'array' && include.length) {\n          if (include.indexOf(j) != -1) {\n            res[j] = filterClone(obj[j], include, exclude)\n          }\n        } else if (include && getType(include) === 'regexp') {\n          if (include.test(j)) {\n            res[j] = filterClone(obj[j], include, exclude)\n          }\n        } else if (include && getType(include) === 'function') {\n          if (include(j, obj[j])) {\n            res[j] = filterClone(obj[j], include, exclude)\n          }\n        } else if (exclude && getType(exclude) === 'array' && exclude.length) {\n          if (exclude.indexOf(j) === -1) {\n            res[j] = filterClone(obj[j], include, exclude)\n          }\n        } else if (exclude && getType(exclude) === 'regexp') {\n          if (!exclude.test(j)) {\n            res[j] = filterClone(obj[j], include, exclude)\n          }\n        } else if (exclude && getType(exclude) === 'function') {\n          if (!exclude(j, obj[j])) {\n            res[j] = filterClone(obj[j], include, exclude)\n          }\n        } else {\n          res[j] = filterClone(obj[j], include, exclude)\n        }\n      }\n    }\n  } else {\n    res = obj\n  }\n  return res\n  function getType(value) {\n    const str = typeof value\n    if (str === 'object') {\n      return value === null\n        ? null\n        : Object.prototype.toString\n            .call(value)\n            .slice(8, -1)\n            .toLowerCase()\n    }\n    return str\n  }\n}\nexport default filterClone\n"],"file":"index.js"}